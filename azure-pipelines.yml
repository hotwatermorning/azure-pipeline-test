variables:
  DEVELOPER_DIR: "/Applications/Xcode_9.3.1.app"
jobs:
- job: build_osx
  pool:
    vmImage: "macOS-10.13"
  timeoutInMinutes: 10
  steps:
  - script: echo hello world
    displayName: script1
  - script: echo second script line
    displayName: script2
  - script: |
      echo "##vso[task.setvariable variable=WXWIDGETS_CACHE]wxwigets_cache_abcde"
    displayName: collect hashes
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: specific
      project: "Terra"
      pipeline: "azure-pipeline-test-ci"
      buildVersionToDownload: latest
      allowPartiallySucceededBuilds: true
      artifactName: $(WXWIDGETS_CACHE)
      downloadType: single
      downloadPath: ./ext/wxWidgets/build_release
    condition: ne(variables['FORCE_REBUILD'], 'true')
    continueOnError: true
    displayName: download cache of wxwigets
  # キャッシュがないときに限りビルドとアップロードを行う
  - script: |
      if [ ! -d "./ext/wxWidgets/build_release" ]; then
        echo "build wxWidgets"
        mkdir -p "./ext/wxWidgets/build_release"
        echo "dummy contents for wxWidgets" > "./ext/wxWidgets/build_release/dummy.txt"
        echo "##vso[task.setvariable variable=SHOULD_UPLOAD_WXWIDGETS;isOutput=true]true"
      else
        echo "use cached wxWidgets"
      fi
    name: build_wxwidgets
    displayName: build wxWidgets
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: "./ext/wxWidgets/build_release"
      artifactName: $(WXWIDGETS_CACHE)
    condition: eq(variables['build_wxwidgets.SHOULD_UPLOAD_WXWIDGETS'], 'true')
    displayName: publish wxWidgets
- job: deploy
  variables:
    SHOULD_UPLOAD_WXWIDGETS: $[ dependencies.build_osx.outputs['build_wxwidgets.SHOULD_UPLOAD_WXWIDGETS'] ]
  steps:
  - script: |
      echo "##vso[task.setvariable variable=WXWIDGETS_CACHE]wxwigets_cache_abcde"
    displayName: collect hashes
  - script: |
      echo "cache name : $WXWIDGETS_CACHE" 
    displayName: show cache name
  # 必ず存在するはず
  # 成功ビルドからしか持ってこれない
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: specific
      project: "Terra"
      pipeline: "azure-pipeline-test-ci"
      buildVersionToDownload: latest
      allowPartiallySucceededBuilds: true
      artifactName: $(WXWIDGETS_CACHE)
      downloadType: single
      downloadPath: ./ext/wxWidgets/build_release
    displayName: download wxwidgets cache from a successful build
    condition: ne(variables['SHOULD_UPLOAD_WXWIDGETS'], 'true')
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: current
      artifactName: $(WXWIDGETS_CACHE)
      downloadType: single
      downloadPath: ./ext/wxWidgets/build_release
    displayName: download wxwidgets cache from current build
    condition: eq(variables['SHOULD_UPLOAD_WXWIDGETS'], 'true')
  - script: |
      echo download artifacts
      ls -laR ./ext
    displayName: deploy script
  dependsOn: build_osx
  condition: succeeded()

